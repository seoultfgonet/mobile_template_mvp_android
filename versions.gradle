/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext.deps = [:]
def deps = [:]

def versions = [
        arch: hasProperty("ARCH_VERSION") ? getProperty("ARCH_VERSION") : "1.0.0",
        support: '26.1.0',
        firebase: '11.8.0',
        firebase_jobdispatcher: '0.6.0',
        multidex: '1.0.2',
        constraint_layout: '1.0.2',
        paging: '1.0.0-alpha4-1',
        dagger: '2.13',
        junit: '4.12',
        espresso: '3.0.1',
        retrofit: '2.3.0',
        okhttp_logging_interceptor: '3.9.0',
        mockwebserver: '3.8.1',
        apache_commons: '2.5',
        mockito: '2.7.19',
        mockito_all: '1.10.19',
        dexmaker: '2.2.0',
        glide: '4.6.1',
        timber: '4.5.1',
        rxjava2: '2.1.9',
        rxandroid2: '2.0.2',
        atsl_runner: '1.0.1',
        atsl_rules: '1.0.1',
        hamcrest: '1.3',
        leakcanary: '1.5.4',
        anko: '0.10.4',
        easypermissions: '1.1.1',
        realm: '5.0.0',
]

def support = [
        annotations: "com.android.support:support-annotations:$versions.support",
        v4: "com.android.support:support-v4:$versions.support",
        app_compat: "com.android.support:appcompat-v7:$versions.support",
        recyclerview: "com.android.support:recyclerview-v7:$versions.support",
        cardview: "com.android.support:cardview-v7:$versions.support",
        preference: "com.android.support:preference-v7:$versions.support",
        design: "com.android.support:design:$versions.support",
        core_utils: "com.android.support:support-core-utils:$versions.support",
        vector_drawable: "com.android.support:support-vector-drawable:$versions.support",
]
deps.support = support

def firebase = [
        messaging: "com.google.firebase:firebase-messaging:$versions.firebase",
        auth: "com.google.firebase:firebase-auth:$versions.firebase",
]
deps.firebase = firebase

def play_services = [
        auth: "com.google.android.gms:play-services-auth:$versions.firebase",
]
deps.play_services = play_services

def room = [
        runtime: "android.arch.persistence.room:runtime:$versions.arch",
        compiler: "android.arch.persistence.room:compiler:$versions.arch",
        rxjava2: "android.arch.persistence.room:rxjava2:$versions.arch",
        testing: "android.arch.persistence.room:testing:$versions.arch",
]
deps.room = room

def lifecycle = [
        runtime: "android.arch.lifecycle:runtime:$versions.arch",
        extensions: "android.arch.lifecycle:extensions:$versions.arch",
        java8: "android.arch.lifecycle:common-java8:$versions.arch",
        compiler: "android.arch.lifecycle:compiler:$versions.arch",
]
deps.lifecycle = lifecycle

def arch_core = [
        testing: "android.arch.core:core-testing:$versions.arch",
]
deps.arch_core = arch_core

def retrofit = [
        runtime: "com.squareup.retrofit2:retrofit:$versions.retrofit",
        gson_converter: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
        rxjava2_adapter: "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
        mock: "com.squareup.retrofit2:retrofit-mock:$versions.retrofit",
]
deps.retrofit = retrofit

deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"

def dagger = [
        runtime: "com.google.dagger:dagger:$versions.dagger",
        android: "com.google.dagger:dagger-android:$versions.dagger",
        android_support: "com.google.dagger:dagger-android-support:$versions.dagger",
        compiler: "com.google.dagger:dagger-compiler:$versions.dagger",
        android_support_compiler: "com.google.dagger:dagger-android-processor:$versions.dagger",
]
deps.dagger = dagger

def espresso = [
        core: "com.android.support.test.espresso:espresso-core:$versions.espresso",
        contrib: "com.android.support.test.espresso:espresso-contrib:$versions.espresso",
        intents: "com.android.support.test.espresso:espresso-intents:$versions.espresso",
]
deps.espresso = espresso

def atsl = [
        runner: "com.android.support.test:runner:$versions.atsl_runner",
        rules: "com.android.support.test:rules:$versions.atsl_runner",
]
deps.atsl = atsl

def mockito = [
        core: "org.mockito:mockito-core:$versions.mockito",
        all: "org.mockito:mockito-all:$versions.mockito_all",
]
deps.mockito = mockito

def leakcanary = [
        debug_compiler: "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary",
        release_compiler: "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary",
]
deps.leakcanary = leakcanary

def anko = [
        common: "org.jetbrains.anko:anko-commons:$versions.anko",
]
deps.anko = anko

def realm = [
        plugin: "io.realm:realm-gradle-plugin:$versions.realm",
]
deps.realm = realm

def glide = [
        runtime: "com.github.bumptech.glide:glide:$versions.glide",
        compiler: "com.github.bumptech.glide:compiler:$versions.glide",
        annotations: "com.github.bumptech.glide:annotations:$versions.glide",
        integration: "com.github.bumptech.glide:recyclerview-integration:$versions.glide",
]
deps.glide = glide


deps.multidex = "com.android.support:multidex:$versions.multidex"
deps.firebase_jobdispatcher = "com.firebase:firebase-jobdispatcher:$versions.firebase_jobdispatcher"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.paging = "android.arch.paging:runtime:$versions.paging"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rxandroid2 = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid2"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.easypermissions = "pub.devrel:easypermissions:$versions.easypermissions"

ext.deps = deps